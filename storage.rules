rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOrgReader(orgId) {
    	return isSignedIn() && (
        request.auth.token['org-' + orgId] == 'Readonly'
        || request.auth.token['org-' + orgId] == 'Member'
        || request.auth.token['org-' + orgId] == 'Admin'
      );
    }

    function isOrgMember(orgId) {
    	return isSignedIn() && (
        request.auth.token['org-' + orgId] == 'Member'
        || request.auth.token['org-' + orgId] == 'Admin'
      );
    }

    // function isOrgAdmin(orgId) {
    //   return isSignedIn() && request.auth.token['org-' + orgId] == 'Admin';
    // }

    match /orgs/{orgId} {
      match /members/{memberId} {
        allow read: if isOrgReader(orgId);
        allow write: if isOrgMember(orgId) && request.resource.size < 1024 * 1024;
      }

      match /uploads/{hash} {
        allow read: if isOrgReader(orgId);
        allow write: if isOrgMember(orgId) && request.resource.size < 10 * 1024 * 1024;
      }
    }
  }
}
